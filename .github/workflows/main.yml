name: CI-CD-1 with Security and Deployment

on:
  push:
    branches:
      - main
    paths:
      - '**/*'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # tfsec Security Scan for Terraform
    - name: Run tfsec (Terraform security scan)
      uses: aquasecurity/tfsec-action@v1.0.3
      with:
        working-directory: ./terraform
        additional_args: --soft-fail --no-color

    # Docker Setup
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Docker Login
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Generate Version Tag
    - name: Set Docker Image Tag
      id: version
      run: echo "VERSION=v$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

    # Build Docker Image
    - name: Build Docker Image
      run: docker build -t devrajj11/ci-cd-1:${{ env.VERSION }} .

    # Trivy Image Scan (pinned to a stable version)
    - name: Trivy Docker Image Scan
      uses: aquasecurity/trivy-action@v0.11.2
      with:
        image-ref: devrajj11/ci-cd-1:${{ env.VERSION }}
        format: table
        exit-code: '0'  # continue even if vulnerabilities are found

    # Push Docker Image
    - name: Push Docker Image
      run: docker push devrajj11/ci-cd-1:${{ env.VERSION }}

    # Update K8s Deployment Manifest
    - name: Update deployment image
      run: |
        sed -i "s|image: devrajj11/ci-cd-1:.*|image: devrajj11/ci-cd-1:${{ env.VERSION }}|g" deploy/deployment.yaml

    # Commit changes back to GitHub
    - name: Commit and Push Changes
      run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        git add deploy/deployment.yaml
        if git diff --cached --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Updated image to ${{ env.VERSION }}"
          git push origin main || echo "Push failed, possibly due to permission issues"

    # Configure AWS Credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    # Update kubeconfig for EKS
    - name: Update kubeconfig
      run: aws eks --region ap-south-1 update-kubeconfig --name testing-cluster

    # Deploy to EKS
    - name: Apply Kubernetes Manifests
      run: |
        kubectl apply -f deploy/deployment.yaml
        kubectl apply -f deploy/svc.yaml
        kubectl apply -f deploy/mysealedsecret.yaml
